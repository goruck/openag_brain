<launch>
  <arg name="environment_1" value="environments/environment_1" />

  <rosparam command="load" file="$(find openag_brain)/launch/personal_food_computer_v2.yaml" />
  <rosparam command="load" file="$(find openag_brain)/launch/personal_food_computer_var_types.yaml" ns="var_types"/>
  <group ns="$(arg environment_1)">
    <node pkg="openag_brain" type="linear_controller.py" name="water_level_high_controller_1">
      <param name="variable" value="water_level_high" type="str"/>
    </node>
    <node pkg="openag_brain" type="pid.py" name="water_potential_hydrogen_controller_1">
      <param name="deadband_width" value="0.5" type="double"/>
      <param name="windup_limit" value="1000" type="double"/>
      <param name="upper_limit" value="1" type="double"/>
      <param name="lower_limit" value="-1" type="double"/>
      <param name="variable" value="water_potential_hydrogen" type="str"/>
      <param name="Kp" value="0.25" type="double"/>
      <param name="Ki" value="0.25" type="double"/>
      <param name="Kd" value="0.75" type="double"/>
    </node>
    <node pkg="openag_brain" type="topic_filter.py" name="topic_filter_1"/>
    <node pkg="openag_brain" type="pid.py" name="air_temperature_controller_1">
      <param name="deadband_width" value="0.5" type="double"/>
      <param name="windup_limit" value="1000" type="double"/>
      <param name="upper_limit" value="1" type="double"/>
      <param name="lower_limit" value="-1" type="double"/>
      <param name="variable" value="air_temperature" type="str"/>
      <param name="Kp" value="1" type="double"/>
      <param name="Ki" value="0" type="double"/>
      <param name="Kd" value="1" type="double"/>
    </node>
    <node pkg="openag_brain" type="recipe_handler.py" name="recipe_handler_1"/>
    <node pkg="openag_brain" type="recipe_persistence.py" name="recipe_persistence_1"/>
    <node pkg="openag_brain" type="video_writer.py" name="video_writer_1">
      <param name="timelapse_scaling_factor" value="86400" type="int"/>
    </node>
    <node pkg="openag_brain" type="image_persistence.py" name="image_persistence_1">
      <param name="min_update_interval" value="3600" type="int"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="light_controller_red_1">
      <param name="variable" value="light_intensity_red" type="str"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="light_controller_blue_1">
      <param name="variable" value="light_intensity_blue" type="str"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="light_controller_white_1">
      <param name="variable" value="light_intensity_white" type="str"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="nutrient_flora_duo_a_controller_1">
      <param name="variable" value="nutrient_flora_duo_a" type="str"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="nutrient_flora_duo_b_controller_1">
      <param name="variable" value="nutrient_flora_duo_b" type="str"/>
    </node>
    <node pkg="openag_brain" type="direct_controller.py" name="air_flush_controller_1">
      <param name="variable" value="air_flush" type="str"/>
    </node>
    <node pkg="openag_brain" type="sensor_persistence.py" name="sensor_persistence_1">
      <param name="max_update_interval" value="600" type="int"/>
      <param name="min_update_interval" value="5" type="int"/>
    </node>

    <!-- only works if nginx and openag_ui are installed -->
    <node pkg="image_view" type="image_saver" name="aerial_saver">
      <remap from="image" to="aerial_image/image_raw" />
      <param name="filename_format" value="/var/www/html/img.jpg" type="string" />
    </node>

    <node pkg="usb_cam" type="usb_cam_node" name="aerial_image" respawn="true" respawn_delay="30">
      <rosparam file="$(find openag_brain)/launch/usb_cam.yaml" />
    </node>
    <node pkg="usb_cam" type="usb_cam_node" name="frontal_image" respawn="true" respawn_delay="30">
      <rosparam file="$(find openag_brain)/launch/usb_cam_frontal.yaml" />
    </node>

    <!-- image rectification -->
    <node name="image_proc_aerial" pkg="image_proc" type="image_proc" ns="aerial_image"/>
    <node name="image_proc_frontal" pkg="image_proc" type="image_proc" ns="frontal_image"/>

    <!-- Mask Plant Tray (Top view only) -->      
    <node name="MaskPlantTray" pkg="openag_cv" type="MaskPlantTray.py" ns="aerial_image" args="image_rect_color"/>

    <node pkg="openag_brain" type="arduino_handler.py" name="arduino_handler">
      <param name="publisher_rate_hz" value="1" type="int"/>
      <param name="baud_rate" value="115200" type="int"/>
    </node>
  </group>

  <node pkg="openag_brain" type="expand_diagnostics.py" name="expand_diagnostics"/>
  <node pkg="openag_brain" type="api.py" name="api"/>
  <node pkg="openag_brain" type="sensor_info_publisher.py" name="sensor_info_publisher"/>
  <test pkg="openag_brain" test-name="test_pub_desired_topics" type="test_pub_desired_topics.py" ns="$(arg environment_1)" time-limit="600.0"/>

  <!-- variables related to image processing and OpenCV -->
  <arg name="InputTopic" value="/environments/environment_1"/>
  <arg name="InputPosition" value="/aerial_image"/>
  <arg name="ImageTopic" value="/image_rect_color/MaskPlantTray"/>
  
  <!-- image processing : Object Measurer -->    
  <include file="$(find openag_cv)/launch/img_processing/object_measurer.launch">
    <arg name="topic" value="$(arg InputTopic)"/>
    <arg name="position" value="$(arg InputPosition)"/>
    <arg name="image" value="$(arg ImageTopic)"/>
  </include>

  <!-- image processing : Blob Detector -->    
  <include file="$(find openag_cv)/launch/img_processing/blob_detector.launch">
    <arg name="topic" value="$(arg InputTopic)"/>
    <arg name="position" value="$(arg InputPosition)"/>
    <arg name="image" value="$(arg ImageTopic)"/>
  </include>

  <!-- First Image Merger -->      
  <node name="Merger1" pkg="openag_cv" type="Merger.py"
    ns="/environments/environment_1/aerial_image" args="image_rect_color
                                                        image_rect_color/MaskPlantTray/ObjectMeasurer
                                                        image_rect_color/ObjectDetectorFinal"/>

  <!-- Second Image Merger -->      
  <node name="Merger2" pkg="openag_cv" type="Merger.py"
    ns="/environments/environment_1/aerial_image" args="image_rect_color/ObjectDetectorFinal
                                                        image_rect_color/MaskPlantTray/BlobDetector
                                                        image_rect_color/ObjectDetectorAndBlobDetector"/>

</launch>
